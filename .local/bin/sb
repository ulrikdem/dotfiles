#!/bin/bash

declare -A default_args=(
    [--unshare-cgroup]=
    [--unshare-ipc]=
    [--unshare-net]=
    [--unshare-pid]=
    [--unshare-user]=
    [--unshare-uts]=
    [--unsetenv DISPLAY]=
    [--unsetenv WAYLAND_DISPLAY]=
)
args=(
    --setenv SANDBOX ''
    --proc /proc
    --dev /dev
    --dir /tmp
    --dir /var/tmp
    --dir /run
    --symlink /run /var/run
    --bind /tmp/sb-share /tmp/sb-share
    --symlink /tmp/sb-share ~/sb-share
    --dir "$PWD"
)
mkdir -pm 700 /tmp/sb-share

for path in /bin /sbin /lib* /usr /opt /etc "$XDG_RUNTIME_DIR/dconf-service/keyfile/defaults" ~/.dotfiles.git; do
    [[ -L $path ]] && args+=(--symlink "$(readlink -- "$path")" "$path") || args+=(--ro-bind-try "$path" "$path")
done
while read -rd '' path; do
    args+=(--ro-bind-try ~/"$path" ~/"$path")
done < <(git --git-dir ~/.dotfiles.git ls-files -z)

add-mount() {
    local dest srces src
    if [[ $OPTARG = :* ]]; then
        dest=${OPTARG:1}
        srces=("$dest")
    else
        readarray -td: srces < <(printf %s: "${OPTARG##*=}")
        [[ $OPTARG = *=* ]] && dest=${OPTARG%=*} || dest=${srces[0]}
    fi
    dest=$(realpath -s -- "$dest") || exit 1
    if ((${#srces[@]} == 1)); then
        src=${srces[0]}
        if [[ $opt = r ]]; then
            args+=(--ro-bind "$src" "$dest")
        elif [[ -z $src ]]; then
            args+=(--tmpfs "$dest")
        elif [[ $(realpath -s -- "$src") = /dev/* ]]; then
            args+=(--dev-bind "$src" "$dest")
        else
            args+=(--bind "$src" "$dest")
        fi
    else
        for src in "${srces[@]::${#srces[@]}-1}"; do
            args+=(--overlay-src "$src")
        done
        src=${srces[-1]}
        if [[ $opt = r ]]; then
            args+=(--overlay-src "$src" --ro-overlay "$dest")
        elif [[ -z $src ]]; then
            args+=(--tmp-overlay "$dest")
        else
            mkdir -p -- "$src"/{upper,work}
            args+=(--overlay "$src"/{upper,work} "$dest")
        fi
    fi
}

bind_args=
policy=()
url_handler=0
while getopts ns:xuRWr:w:e:b:B: opt; do
    case $opt in
        n) unset default_args[--unshare-net];;
        s) unset default_args["--unshare-$OPTARG"];;
        x)
            unset default_args['--unsetenv DISPLAY'] default_args['--unsetenv WAYLAND_DISPLAY']
            for path in /sys ${XAUTHORITY:+"$XAUTHORITY"} "/tmp/.X11-unix/X${DISPLAY#:}" \
                ${WAYLAND_DISPLAY:+"$XDG_RUNTIME_DIR/$WAYLAND_DISPLAY"} "$XDG_RUNTIME_DIR"/{pipewire-0,pulse/native}; do
                args+=(--ro-bind-try "$path" "$path")
            done
            for path in /dev/{dri,nvidia*}; do
                args+=(--dev-bind-try "$path" "$path")
            done;;
        u) url_handler=1;;
        R) bind_args=ro-bind;;
        W) bind_args=bind;;
        [rw]) add-mount;;
        e) [[ $OPTARG = *=* ]] && args+=(--setenv "${OPTARG%%=*}" "${OPTARG#*=}") || args+=(--unsetenv "$OPTARG");;
        b) policy+=(--talk="$OPTARG");;
        B) policy+=(--own="$OPTARG");;
        ?) echo 'sb [-nxuRW] [-rw [dest-path=]src-path[:overlay]...]... [-rw :path]... [-bB busname]...' \
            '[-e var[=value]]... [-s namespace]... [-- [bwrap-arg]...] [command [arg]...]' >&2; exit 1;;
    esac
done
shift $((OPTIND - 1))

if [[ -n $bind_args ]]; then
    for arg; do
        [[ -e $arg ]] && args+=(--$bind_args "$arg" "$(realpath -s -- "$arg")")
    done
fi

if ((${#policy[@]} || url_handler)); then
    temp=$(mktemp -d "$XDG_RUNTIME_DIR/sb.XXXXXXXXXX")

    if ((${#policy[@]})); then
        mkfifo -- "$temp/proxy"
        xdg-dbus-proxy --fd=3 "$DBUS_SESSION_BUS_ADDRESS" "$temp/bus" --filter "${policy[@]}" 3<>"$temp/proxy" &
        read -N 1 <"$temp/proxy"
        args+=(
            --bind "$temp/bus" "$XDG_RUNTIME_DIR/bus"
            --setenv DBUS_SESSION_BUS_ADDRESS unix:path="$XDG_RUNTIME_DIR/bus"
        )
    fi

    if ((url_handler)); then
        mkfifo -- "$temp/url"
        tail -f -- "$temp/url" | while read -rd '' url; do
            xmessage -buttons _Yes:0,_No:1 -default _Yes "Open $url?" && "$BROWSER" -- "$url" &
        done &>/dev/null &
        args+=(--bind "$temp/url" "$XDG_RUNTIME_DIR/sb-url")

        exec {browser}<<-'BASH'
			#!/bin/bash
			printf '%s\0' "$@" >$XDG_RUNTIME_DIR/sb-url
			BASH
        exec {desktop}<<-EOF
			[Desktop Entry]
			Type=Application
			Name=Browser
			Exec=browser %U
			MimeType=x-scheme-handler/http;x-scheme-handler/https;
			EOF
        exec {mimeapps}< <(cat <(grep -v '^x-scheme-handler/http' ~/.config/mimeapps.list 2>/dev/null) - <<-EOF
			[Default Applications]
			x-scheme-handler/http=browser.desktop
			x-scheme-handler/https=browser.desktop
			EOF
        )
        args+=(
            --perms 755 --file $browser ~/.local/bin/browser
            --file $desktop ~/.local/share/applications/browser.desktop
            --file $mimeapps ~/.config/mimeapps.list
            --setenv BROWSER browser
        )
    fi

    exec {fd}> >(
        read
        kill $(jobs -p)
        rm -r -- "$temp"
    )
    args+=(--sync-fd $fd)
fi

if ((!url_handler)) && [[ -e ~/.config/mimeapps.list ]]; then
    exec {mimeapps}<~/.config/mimeapps.list
    args+=(--file $mimeapps ~/.config/mimeapps.list)
fi

(($#)) || set zsh
exec bwrap ${!default_args[@]} "${args[@]}" "$@"

# vim: tabstop=4
